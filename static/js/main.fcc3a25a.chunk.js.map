{"version":3,"sources":["Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Notification/Notification.jsx","Components/Time/Time.jsx","Components/App/App.jsx","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","prototype","PropTypes","number","stile1","textTransform","FeedbackOptions","options","handleClick","style","name","onClick","string","func","Section","title","children","element","Notification","message","Time","useState","state","setState","clickFeed","prevState","countTotalFeedback","totalFeed","posPer","Math","round","map","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAEMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,8FACA,+BACE,6EAAaJ,KACb,qGAAiBC,KACjB,uEAAYC,KACZ,wCAAWC,KACD,IAATH,GACC,wCAEGI,EAFH,cASVL,EAAWM,UAAY,CACrBL,KAAMM,IAAUC,OAChBN,QAASK,IAAUC,OACnBL,IAAKI,IAAUC,OACfJ,MAAOG,IAAUC,OACjBH,mBAAoBE,IAAUC,QAEjBR,QCzBTS,EAAS,CAAEC,cAAe,aAE1BC,EAAkB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAClC,OACE,6BACE,6BACE,wBACEC,MAAOL,EACPM,KAAMH,EACNI,QAAS,kBAAMH,EAAYD,IAH7B,SAKGA,SAOXD,EAAgBL,UAAY,CAC1BM,QAASL,IAAUU,OACnBJ,YAAaN,IAAUW,MAGVP,QCxBTQ,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MAIPF,EAAQb,UAAY,CAClBc,MAAOb,IAAUU,OACjBI,SAAUd,IAAUe,SAEPH,QCZTI,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KAEdD,EAAajB,UAAY,CACvBkB,QAASjB,IAAUU,QAENM,QCqCAE,MAvCf,WACE,MAA0BC,mBAAS,CAAEzB,KAAM,EAAGC,QAAS,EAAGC,IAAK,IAA/D,mBAAOwB,EAAP,KAAcC,EAAd,KAEMC,EAAY,SAACd,GACjBa,GAAS,SAACE,GACR,OAAO,2BAAKA,GAAZ,kBAAwBf,EAAOe,EAAUf,GAAQ,QAI/CgB,EAAqB,WACzB,OAAOJ,EAAM1B,KAAO0B,EAAMzB,QAAUyB,EAAMxB,KAMtC6B,EAAYD,IACZE,EAJGC,KAAKC,MAAoB,IAAbR,EAAM1B,KAAc8B,KAKzC,OACE,8BACE,eAAC,EAAD,CAASX,MAAO,+IAAhB,UACG,CAAC,OAAQ,UAAW,OAAOgB,KAAI,SAACC,GAAD,OAC9B,cAAC,EAAD,CAA2BzB,QAASyB,EAAKxB,YAAagB,GAAhCQ,MAET,IAAdL,GAAmB,cAAC,EAAD,CAAcR,QAAQ,yBAC3B,IAAdQ,GACC,cAAC,EAAD,CACE/B,KAAM0B,EAAM1B,KACZC,QAASyB,EAAMzB,QACfC,IAAKwB,EAAMxB,IACXC,MAAO4B,EACP3B,mBAAoB4B,UC3BjBK,EAPI,WACjB,OACE,mCACE,cAAC,EAAD,O,MCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fcc3a25a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2>Статистика</h2>\r\n      <ul>\r\n        <li>Хороший:{good}</li>\r\n        <li>Нейтральный:{neutral}</li>\r\n        <li>Плохой:{bad}</li>\r\n        <li>Total:{total}</li>\r\n        {good !== 0 && (\r\n          <li>\r\n            Goods:\r\n            {positivePercentage}%\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nStatistics.prototype = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst stile1 = { textTransform: \"uppercase\" };\r\n\r\nconst FeedbackOptions = ({ options, handleClick }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <button\r\n          style={stile1}\r\n          name={options}\r\n          onClick={() => handleClick(options)}\r\n        >\r\n          {options}\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.prototype = {\r\n  options: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\nSection.prototype = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Notification = ({ message }) => {\r\n  return <h1>{message}</h1>;\r\n};\r\nNotification.prototype = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import React, { useState } from \"react\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"../Section/Section\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nfunction Time() {\r\n  const [state, setState] = useState({ good: 0, neutral: 0, bad: 0 });\r\n\r\n  const clickFeed = (name) => {\r\n    setState((prevState) => {\r\n      return { ...prevState, [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return state.good + state.neutral + state.bad;\r\n  };\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round((state.good * 100) / countTotalFeedback());\r\n  };\r\n\r\n  const totalFeed = countTotalFeedback();\r\n  const posPer = countPositiveFeedbackPercentage();\r\n  return (\r\n    <div>\r\n      <Section title={\"Пожалуйста оставьте отзыв\"}>\r\n        {[\"good\", \"neutral\", \"bad\"].map((key) => (\r\n          <FeedbackOptions key={key} options={key} handleClick={clickFeed} />\r\n        ))}\r\n        {totalFeed === 0 && <Notification message=\"There is no feedback\" />}\r\n        {totalFeed !== 0 && (\r\n          <Statistics\r\n            good={state.good}\r\n            neutral={state.neutral}\r\n            bad={state.bad}\r\n            total={totalFeed}\r\n            positivePercentage={posPer}\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\nimport Time from \"../Time/Time\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      <Time />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\nimport \"reset-css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}